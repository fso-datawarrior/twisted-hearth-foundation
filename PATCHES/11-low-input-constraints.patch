--- a/src/components/FormField.tsx
+++ b/src/components/FormField.tsx
@@ -15,6 +15,9 @@
   inputMode?: 'text' | 'tel' | 'email' | 'numeric' | 'decimal' | 'search' | 'url';
   autoComplete?: string;
   enterKeyHint?: 'enter' | 'done' | 'go' | 'next' | 'previous' | 'search' | 'send';
+  minLength?: number;
+  maxLength?: number;
+  pattern?: string;
 }
 
 const FormField = ({ 
@@ -30,6 +33,9 @@
   inputMode,
   autoComplete,
   enterKeyHint,
+  minLength,
+  maxLength,
+  pattern,
 }: FormFieldProps) => {
   return (
     <div className="space-y-2">
@@ -49,6 +55,9 @@
           inputMode={inputMode}
           autoComplete={autoComplete}
           enterKeyHint={enterKeyHint}
+          minLength={minLength}
+          maxLength={maxLength}
+          pattern={pattern}
         />
       )}
     </div>

## Description
Adds HTML5 form validation attributes for better mobile UX and security.

## Problem
- Missing input constraints allow invalid data
- No client-side validation hints
- Poor mobile form experience
- Users can submit invalid data

## Solution
- Add minLength, maxLength, pattern props to FormField
- Pass validation attributes to Input component
- Enable HTML5 validation UI on mobile
- Better user feedback before submission

## Impact
- Instant validation feedback on mobile
- Prevents invalid submissions
- Better UX with native keyboard hints
- Reduced server-side validation errors

## Testing
- Test email pattern validation
- Verify maxLength prevents excess input
- Check mobile keyboard respects inputMode
- Test form submission with invalid data
