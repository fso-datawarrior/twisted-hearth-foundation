# PATCHES/02-critical-resilience-add-error-boundaries.patch

--- a/src/components/ErrorBoundary.tsx
+++ b/src/components/ErrorBoundary.tsx
@@ -1,4 +1,4 @@
-import React, { Component, ErrorInfo, ReactNode } from 'react';
+import React, { Component, ErrorInfo, ReactNode } from 'react';
 
 interface Props {
   children: ReactNode;
@@ -6,6 +6,7 @@ interface Props {
   fallback?: ReactNode;
 }
 
 interface State {
   hasError: boolean;
   error?: Error;
@@ -15,6 +16,7 @@ class ErrorBoundary extends Component<Props, State> {
   public state: State = {
     hasError: false
   };
 
   public static getDerivedStateFromError(error: Error): State {
     return { hasError: true, error };
   }
@@ -25,6 +27,7 @@ class ErrorBoundary extends Component<Props, State> {
   }
 
   public render() {
     if (this.state.hasError) {
       if (this.props.fallback) {
         return this.props.fallback;
       }
@@ -33,6 +36,7 @@ class ErrorBoundary extends Component<Props, State> {
         <div className="min-h-screen bg-background flex items-center justify-center">
           <div className="max-w-md w-full mx-4 p-6 rounded-2xl shadow-lg bg-card border border-accent-gold/30">
             <h2 className="font-heading text-xl font-semibold mb-3 text-accent-gold">
               Something went wrong
             </h2>
             <p className="mb-4 text-muted-foreground">
               {this.props.message || 'An unexpected error occurred. Please try refreshing the page.'}
             </p>
             <div className="flex gap-3">
               <button
                 onClick={() => window.location.reload()}
                 className="flex-1 rounded-xl px-4 py-2 bg-accent-purple text-white hover:bg-accent-purple/90 transition-colors font-subhead"
               >
                 Refresh Page
               </button>
               <button
                 onClick={() => this.setState({ hasError: false })}
                 className="flex-1 rounded-xl px-4 py-2 border-2 border-accent-gold/50 text-accent-gold hover:bg-accent-gold/10 transition-colors font-subhead"
               >
                 Try Again
               </button>
             </div>
           </div>
         </div>
       );
     }
 
     return this.props.children;
   }
 }
 
 export default ErrorBoundary;

--- a/src/pages/Gallery.tsx
+++ b/src/pages/Gallery.tsx
@@ -1,4 +1,4 @@
 import { useState, useEffect } from "react";
+import ErrorBoundary from "@/components/ErrorBoundary";
 import Footer from "@/components/Footer";
 import { Button } from "@/components/ui/button";
 import { Input } from "@/components/ui/input";
@@ -29,6 +29,7 @@ const Gallery = () => {
   const [approvedPhotos, setApprovedPhotos] = useState<Photo[]>([]);
   const [userPhotos, setUserPhotos] = useState<Photo[]>([]);
   const [uploading, setUploading] = useState(false);
+  const [loading, setLoading] = useState(true);
   const [activeCategory, setActiveCategory] = useState<string>('all');
   const [photosPerView, setPhotosPerView] = useState(1);
   const { toast } = useToast();
@@ -45,6 +46,7 @@ const Gallery = () => {
   useEffect(() => {
     loadImages();
   }, []);
 
   const loadImages = async () => {
+    setLoading(true);
     try {
       // Load approved photos for public gallery
       const { data: approved, error: approvedError } = await getApprovedPhotos();
       if (approvedError) throw approvedError;
@@ -54,6 +56,7 @@ const Gallery = () => {
       const { data: user, error: userError } = await getUserPhotos();
       if (userError) throw userError;
       setUserPhotos(user || []);
     } catch (error) {
       console.error('Error loading images:', error);
+      toast({
+        title: "Error loading gallery",
+        description: "Failed to load photos. Please try again.",
+        variant: "destructive",
+      });
     }
+    finally {
+      setLoading(false);
+    }
   };
@@ -308,6 +311,7 @@ const Gallery = () => {
   return (
     <RequireAuth>
+      <ErrorBoundary message="Failed to load gallery. Please refresh the page.">
       <div className="min-h-screen bg-background relative">
         <main className="pt-20 relative z-10">
           {/* <CSSFogBackground /> */}
@@ -315,6 +319,7 @@ const Gallery = () => {
             <div className="container mx-auto max-w-7xl px-4">
               <h1 className="font-heading text-4xl md:text-6xl text-center mb-8 text-shadow-gothic">
                 Gallery of Twisted Tales
               </h1>
               
               <p className="font-body text-lg text-center mb-12 text-muted-foreground max-w-3xl mx-auto">
                 Memories from past celebrations and previews of what's to come. 
                 Every image tells a story... some darker than others.
               </p>
               
             {/* Gallery from Halloween's Past */}
             <div className="mb-16">
               <h2 className="font-subhead text-3xl text-center mb-8 text-accent-gold">
                 Gallery from Halloween's Past
               </h2>
               
               {/* Category Filter Tabs */}
               <div className="flex flex-wrap justify-center gap-3 mb-8">
                 <Button
                   variant={activeCategory === 'all' ? 'default' : 'outline'}
                   onClick={() => setActiveCategory('all')}
                   className={`font-subhead ${
                     activeCategory === 'all' 
                       ? "bg-accent-gold text-ink hover:bg-accent-gold/80" 
                       : "border-accent-purple text-accent-gold hover:bg-accent-purple/20"
                   }`}
                 >
                   All Photos
                   <Badge variant="secondary" className="ml-2 text-xs">
                     {getFilteredPhotos().length}
                   </Badge>
                 </Button>
                 {PREVIEW_CATEGORIES.map((category) => {
                   const categoryPhotos = activeCategory === category.id ? getFilteredPhotos() : 
                     [...getStaticPhotosForCategory(category.id), 
                      ...(approvedPhotos || []).filter(p => p.category === category.id || p.tags?.includes(category.id))];
                   return (
                     <Button
                       key={category.id}
                       variant={activeCategory === category.id ? 'default' : 'outline'}
                       onClick={() => setActiveCategory(category.id)}
                       className={`font-subhead ${
                         activeCategory === category.id 
                           ? "bg-accent-gold text-ink hover:bg-accent-gold/80" 
                           : "border-accent-purple text-accent-gold hover:bg-accent-purple/20"
                       }`}
                     >
                       {category.title}
                       <Badge variant="secondary" className="ml-2 text-xs">
                         {categoryPhotos.length}
                       </Badge>
                     </Button>
                   );
                 })}
               </div>
 
               {/* Gallery Carousel */}
               <div className="w-full">
+                <ErrorBoundary message="Failed to load gallery carousel. Please refresh the page.">
                 <MultiPreviewCarousel
                   defaultCategory={activeCategory}
                   activeCategory={activeCategory}
                   showCategoryTabs={false}
                   autoPlay={true}
                   autoPlayInterval={5000}
                   previewPhotos={getFilteredPhotos()}
                 />
+                </ErrorBoundary>
               </div>
               {getFilteredPhotos().length === 0 && (
                 <EmptyGalleryState 
                   categoryName={PREVIEW_CATEGORIES.find(c => c.id === activeCategory)?.title || 'this category'}
                   message={activeCategory === 'all' 
                     ? 'Be the first to share your Twisted Tales memories!' 
                     : `No memories captured in ${PREVIEW_CATEGORIES.find(c => c.id === activeCategory)?.title} yet`
                   }
                 />
               )}
             </div>
@@ -427,6 +432,7 @@ const Gallery = () => {
             {/* My Photos Section - Moved Below */}
             {userPhotos.length > 0 && (
               <div className="mb-12">
+                <ErrorBoundary message="Failed to load your photos. Please refresh the page.">
                 <h2 className="font-subhead text-2xl mb-6 text-accent-gold">
                   My Photos
                 </h2>
                 <PhotoCarousel
                   photos={userPhotos}
                   onLike={handleLike}
                   getPhotoUrl={getPhotoUrl}
                   showStatus={true}
                   showUserActions={true}
                   onUpdate={handleUpdate}
                   onDelete={handleDelete}
                   onFavorite={handleFavorite}
                   onEmojiReaction={handleEmojiReaction}
                   onCaptionUpdate={handleCaptionUpdate}
                   photosPerView={photosPerView}
                   className="mb-4"
                 />
+                </ErrorBoundary>
               </div>
             )}
             
             {/* Photo Guidelines */}
             <div className="bg-bg-2 p-8 rounded-lg border border-accent-purple/30">
               <h2 className="font-subhead text-2xl text-center mb-6 text-accent-gold">
                 Photography Guidelines
               </h2>
               <div className="grid md:grid-cols-2 gap-8">
                 <div>
                   <h3 className="font-subhead text-lg mb-4 text-accent-gold text-center">During the Event</h3>
                   <ul className="font-body text-sm text-muted-foreground space-y-2">
                     <li>• Photography encouraged during designated times</li>
                     <li>• Respect others' privacy and consent</li>
                     <li>• No flash during performances</li>
                     <li>• Tag us on social media: #TwistedFairytalesBash</li>
                   </ul>
                 </div>
                 <div>
                   <h3 className="font-subhead text-lg mb-4 text-accent-gold text-center">Share Your Photos</h3>
                   <ul className="font-body text-sm text-muted-foreground space-y-2">
                     <li>• Email your best shots for the gallery</li>
                     <li>• Professional portrait station available</li>
                     <li>• Group photos encouraged</li>
                     <li>• Behind-the-scenes moments welcome</li>
                   </ul>
                 </div>
               </div>
               
               <div className="mt-8 text-center">
                 <p className="font-body text-muted-foreground italic">
                   "Some memories are too dark to develop, but the best ones glow in the shadows."
                 </p>
               </div>
             </div>
           </div>
         </section>
       </main>
       
       <Footer />
     </div>
+      </ErrorBoundary>
   </RequireAuth>
   );
 };
