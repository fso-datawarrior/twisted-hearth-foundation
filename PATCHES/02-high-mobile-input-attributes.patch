--- a/src/components/ui/input.tsx
+++ b/src/components/ui/input.tsx
@@ -8,6 +8,7 @@
       <input
         type={type}
         className={cn(
+          "text-base",
           "flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
           className
         )}
--- a/src/components/FormField.tsx
+++ b/src/components/FormField.tsx
@@ -1,11 +1,12 @@
 import { Label } from "@/components/ui/label";
 import { Input } from "@/components/ui/input";
+import { InputHTMLAttributes } from "react";
 
-interface FormFieldProps {
+interface FormFieldProps extends Omit<InputHTMLAttributes<HTMLInputElement>, 'type'> {
   id: string;
   label: string;
   type?: string;
-  value: string;
+  value?: string;
   onChange: (value: string) => void;
   required?: boolean;
   error?: string;
@@ -19,13 +20,16 @@
   error,
   helperText,
   placeholder,
+  ...inputProps
 }: FormFieldProps) {
   return (
     <div className="space-y-2">
       <Label htmlFor={id}>{label}</Label>
       <Input
         id={id}
-        type={type}
+        type={type || "text"}
+        inputMode={inputProps.inputMode}
+        autoComplete={inputProps.autoComplete}
         value={value}
         onChange={(e) => onChange(e.target.value)}
         required={required}
--- a/src/pages/RSVP.tsx
+++ b/src/pages/RSVP.tsx
@@ -721,6 +721,8 @@
               label="Full Name"
               value={name}
               onChange={setName}
+              autoComplete="name"
+              enterKeyHint="next"
               required
               error={errors.name}
             />
@@ -729,6 +731,9 @@
               label="Email Address"
               type="email"
               value={email}
+              inputMode="email"
+              autoComplete="email"
+              enterKeyHint="next"
               onChange={setEmail}
               required
               error={errors.email}
@@ -740,6 +745,8 @@
               label="Number of Guests"
               type="number"
               value={guestCount}
+              inputMode="numeric"
+              pattern="[0-9]*"
               onChange={setGuestCount}
               required
               error={errors.guestCount}
@@ -750,6 +757,7 @@
               id="dietary"
               label="Dietary Restrictions (Optional)"
               value={dietaryRestrictions}
+              autoComplete="off"
               onChange={setDietaryRestrictions}
               placeholder="e.g., vegetarian, gluten-free, allergies"
             />

## Description
Adds mobile-optimized input attributes to improve keyboard behavior and prevent iOS auto-zoom.

## Problem
- iOS Safari zooms in on inputs with font-size < 16px
- Soft keyboard doesn't show optimized layouts (email, numeric)
- Autocomplete suggestions don't work properly
- Generic "return" key instead of contextual "next"/"done"

## Solution
- Set base input font-size to 16px (text-base) to prevent zoom
- Add `inputMode="email"` for email inputs
- Add `inputMode="numeric"` with `pattern="[0-9]*"` for number inputs
- Add `autoComplete` attributes for better autofill
- Add `enterKeyHint` to show "next"/"done" on keyboard

## Impact
- No more accidental zoom on form focus
- Native email/numeric keyboards on mobile
- Better autocomplete suggestions
- More intuitive keyboard interactions

## Browser Support
- All modern mobile browsers
- inputMode: iOS Safari 12.2+, Chrome 66+
- enterKeyHint: iOS Safari 13.4+, Chrome 77+
