---
alwaysApply: true
description: Project structure and architecture guide
---

# Twisted Hearth Foundation - Project Structure Guide

## Core Architecture
This is a React + TypeScript + Vite project with Supabase backend integration.

### Main Entry Points
- [src/main.tsx](mdc:src/main.tsx) - Application entry point
- [src/App.tsx](mdc:src/App.tsx) - Main application component
- [vite.config.ts](mdc:vite.config.ts) - Vite configuration with Lovable AI integration

### Key Directories
- `src/pages/` - Page components (Index, About, Contact, etc.)
- `src/components/` - Reusable UI components
- `src/components/ui/` - shadcn/ui components (DO NOT MODIFY)
- `src/lib/` - Utility functions and configurations
- `src/hooks/` - Custom React hooks
- `src/integrations/supabase/` - Supabase client and types
- `supabase/` - Database migrations and functions

### Configuration Files
- [package.json](mdc:package.json) - Dependencies and scripts
- [tsconfig.json](mdc:tsconfig.json) - TypeScript configuration
- [tailwind.config.ts](mdc:tailwind.config.ts) - Tailwind CSS configuration
- [components.json](mdc:components.json) - shadcn/ui configuration

## Lovable AI Integration
This project uses Lovable AI with specific components that MUST NOT be modified:
- vite.config.ts (contains componentTagger plugin)
- components.json (shadcn/ui configuration)
- src/components/ui/ (ENTIRE DIRECTORY)
- src/lib/utils.ts (cn() function)

## Development Guidelines
- Always use @/ path aliases for imports
- Never modify files in src/components/ui/
- Keep the cn() utility function intact
- Don't modify the Lovable AI plugin in vite.config.ts